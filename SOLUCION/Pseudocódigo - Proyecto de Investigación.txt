Algoritmo Sistema de Facturacion del SuperMaxi - Loja

  Inicio
  Definir
        stock, como Entero
        subTotal, subIva, descuento, sumaDescuentos, subDescuentoAfiliado, iva, total, descuentoAfiliado, alimentacionD, educacionD, hogarD, vestimentaD, saludD, deducibleTotal, como Real
        archivoInventario, archivoEstadistica, fechaFormat, como Cadena
        afiliado, como Logico
        Lista<Factura> carrito

  stock = 100
  iva = 0.12
  descuentoAfiliado = 0.05
  afiliado = falso
  archivoInventario = "Inventario.csv"
  archivoEstadistica = "Estadisticas.csv"
  fechaFormat = (fechaActual) 

1.Metodo Principal
2.      Definir
                limfactura, limProductos como Entero

3.      limfactura = 5
4.      lista<Producto> inventario = leerInventario(archivoInventario)
5.      Escribir fechaFormat

        6.Para (i = 0 ; i < limfactura ; i = i+1)
                limProductos = aleatorio(1,10)
                generarFactura(inventario, limProductos)
                Escribir "-----------------------------------------------------------------------------------------------------------"
                Escribir ""
                Escribir "Cod   Nombre     Cant     Descuento     PrecioU      Total"
                Para (Cadena lista : carrito)
                        Escribir (prodFact.obtenerCodigo(), prodFact.obtenerNombre(), prodFact.obtenerCantidad(), prodFact.obtenerDescuento(), prodFact.obtenerPrecio(), prodFact.obtenerTotal())
                Fin Para
                Escribir ""
                Escribir "-----------------------------------------------------------------------------------------------------------"
                Escribir "SUBTOTAL ",subTotal
                Escribir "DESCUENTO ",sumaDescuentos,"$"
                Escribir "AHORRO POR AFILIACION ",subDescuentoAfiliado
                Escribir "IVA ",iva,"%"
                Escribir "SUBIVA ",subIva
                Escribir "TOTAL ",total
                Escribir "------------------------------"
                Escribir "Forma de Pago: ",formaPago()
                Escribir "------------------------------"
                Escribir "======== DEDUCIBLES ========"
                Escribir "Deducible Vivienda ",hogarD
                Escribir "Deducible Educacion ",educacionD
                Escribir "Deducible Alimentacion",alimentacionD
                Escribir "Deducible Vestimenta ",vestimentaD
                Escribir "Deducible Salud ",saludD
                Escribir "Total Deducible ",deducibleTotal
                Escribir "---------------------------------"
                Escribir ""
        Fin Para

7.      presentarInventario(inventario)

8.Fin Metodo Principal

1.Funcion lista<Producto> leerInventario (archivo x(a-z,A-Z," ")):x
2.      Definir
                linea, nombre, categoria, caducidad, como Cadena
                codigo, Cantidad como Entero
                precio, como Real
                partes(6),Cadena[a-z,A-Z," "]

3.      lista<Producto> inventario = nuevo Arreglolista

4.      Intentar (hacer copia de (nuevo Archivo(archivo)))

                Mientras (leer hasta la ultima linea) hacer
                        linea = leer.porlinea
                        partes[] = leer.hasta(";")

                        codigo = leer(partes[0])
                        nombre = leer(partes[1])
                        precio = leer(partes[2])
                        cantidad = leer(partes[3])
                        categoria = leer(partes[4])
                        caducidad = leer(partes[5])

                        Producto producto = nuevo Producto(codigo,nombre,precio, cantidad,categoria,caducidad)
                        inventario.agregar(producto)
                Fin Mientras

        Fin Intentar
        Atrapar (Excepcion Archivo no Encontrado)
                Escribir "Error al encontrar archivo"
        Fin Atrapar

5.      devolver inventario

6.Fin Funcion leerInventario 

1.Funcion Producto buscaProducto(lista<Producto> inventario, ran_Cod i(1-100))
2.      Para (Producto producto : inventario)
                Si (producto.obtenerCodigo() == ran_Cod)
                        Devolver producto
                Fin Si
        Fin Para
3.      devolver nulo
4.Fin Funcion buscarProducto

1.Procedimiento aplicarDescuentoProducto(Producto producto)
2.      descuento = 0
3.      Si (producto.obtenerCantidad() > stock Y producto.obtenerCaducidad().contiene("2024"))
                descuento = 0.30
        Si No
                Si (producto.obtenerCantidad() > stock)
                        descuento = 0.10
                Si No
                        Si (producto.obtenerCaducidad().contiene("2024"))
                                descuento = 0.20
                        Fin Si
                Fin Si
        Fin Si
4.Fin Procedimiento aplicarDescuentoProducto

1.Procedimiento generarFactura (lista<Producto> inventario, limProductos i:(1-10))
2.      Definir
                preciounitario, como Real
                codigo, cantidad, como Entero
                categoriaD, precioT como Cadena

3.      subTotal = 0
4.      subIva = 0
5.      subDescuentoAfiliado = 0
6.      sumaDescuentos = 0
7.      carrito = new ArregloLista
8.      descuento = 0
9.      deducibleTotal = 0
10.     alimentacionD = 0
11.     educacionD = 0
12.     hogarD = 0
13.     vestimentaD = 0
14.     saludD = 0 


15.     Para (i = 0 ; i < limProductos ; i = i+1)
                codigo = aleatorio(1,100)
                Producto producto = buscaProducto(inventario, codigo)
                cantidad = aleatorio(1,10)
                producto.restarCantidad(cantidad)
                Si (descuento > 0)
                        preciounitario = preciounitario - producto.obtenerPrecio * descuento
                        precioT = preciounitario * cantidad
                        sumaDescuentos = sumaDescuentos + preciounitario
                        subTotal = subTotal + preciounitario * cantidad
                        Factura factura = nuevo Factura (codigo, producto.obtenerNombre(), cantidad, descuento, producto.obtenerPrecio(), precioT)
                        carrito.agregar(factura)
                Si No
                        subTotal = subTotal + preciounitario * cantidad
                        precioT = preciounitario * cantidad
                        Factura factura = nuevo Factura (codigo, producto.obtenerNombre(), cantidad, descuento, producto.obtenerPrecio(), precioT)
                        carrito.agregar(factura)
                Fin Si
                categoriaD = producto.obtenerCategoria()
                Si (categoriaD == "Alimentacion")
                        alimentacionD = alimentacionD + precioT
                Si No
                        Si (categoriaD == "Educacion")
                                educacionD = educacionD + precioT
                        Si No
                                Si (categoriaD == "Hogar")
                                        hogarD = educacionD + precioT
                                Si No
                                        Si (categoriaD == "Vestimenta")
                                                vestimentaD = vestimentaD + precioT
                                        Si No
                                                Si (categoriaD == "Salud")
                                                        saludD = saludD + precioT
                                                Fin Si
                                        Fin Si
                                Fin Si
                        Fin Si
                Fin Si
                deducibleTotal = deducibleTotal + precioT
                escribirEstadistica(codigo, producto.obtenerNombre(), categoriaD, cantidad)
        Fin Para

16.     verificarAfiliado()
17.     Si (afiliado)
                total = subTotal - sumaDescuentos
                subDescuentoAfiliado = total * descuentoAfiliado
                total = total - subDescuentoAfiliado
                subIva = total * iva
                total = total + subIva
        Si No
                total = subTotal - sumaDescuentos
                subIva = total * iva
                total = total + subIva
        Fin Si

18.Fin Procedimiento generarFactura

1.Procedimiento verificarAfiliado()
2.      Definir
                aux, como Entero
3.      aux = aleatorio(1,2)
4.      Si (aux == 1)
                afiliado = verdadero
        Si No 
                afiliado = falso
        Fin Si
5.Fin Procedimiento verificarAfiliado

1.Funcion formaPago():x
2.      Definir
                forma, como Cadena
                n, como Entero
3.      n = aleatorio(1,3)
4.      Si (n == 1)
                forma = "Efectivo"
        Si No 
                Si (n == 2)
                        forma = "tarjeta de credito"
                Si No
                        forma = "tarjeta de debito"
                Fin Si
        Fin Si
5.      devolver forma
6.Fin Funcion formaPago

1.Procedimiento presentarInventario(lista<Producto> inventario)
2.      Para (Producto producto : inventario)
                Escribir (producto.ObtenerCodigo() , ". ", producto.ObtenerNombre() , " - " , producto.ObtenerPrecio() , " - " , producto.ObtenerCantidad() , " - " , producto.ObtenerCategoria() , " - " , producto.ObtenerCaducidad())
        Fin Para
3.Fin Procedimiento presentarInventario

1.Procedimiento escribirEstadistica(codigo i(1-100), nombre x(a-z,A-Z," "), categoria x(a-z,A-Z), nroVentas i(1-n))
2.      EscritorArchivo fw = nuevo EscritorArchivo(archivoEstadistica, verdadero)
3.      Intentar
                Si (archivoVacio(archivoEstadistica))
                        fw.escribir(fechaFormat + ";" + codigo + ";" + nombre + ";" + categoria + ";" + nroVentas)
                Si No
                        fw.escribir
                        fw.escribir(fechaFormat + ";" + codigo + ";" + nombre + ";" + categoria + ";" + nroVentas)
                Fin Si
        Fin Intentar
        Atrapar (Excepcion)
                Escribir "Error al encontrar archivo "
        Fin Atrapar
4.Fin Procedimiento escribirEstadistica

1.Funcion archivoVacio(archivo x(a-z,A-Z)):l
2.      Archivo file = nuevo Archivo(archivo)
3.      Si (!file.existe() O file.esDirectorio())
                Devolver falso
        Fin Si
4.      devolver file.dimension() > 0
5.Fin Funcion archivoVacio

Fin Algoritmo Sistema de Facturacion del SuperMaxi - Loja